{"version":3,"file":"static/js/365.d23afa49.chunk.js","mappings":"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","sources":["redux/selectors/dialogsSelectors.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/FormValidation/TextFormSchema.js","hoc/withAuthRedirect.js"],"sourcesContent":["export const getFriendsData = (state) => {\r\n    return state.friendsData;\r\n}\r\nexport const getDialogsPageState = (state) => {\r\n    return state.dialogsPage;\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport './DialogItem.css'\r\n\r\nconst DialogItem = ({ id, imgUrl, name }) => {\r\n\r\n    const activeLink = \"dialog-item-link dialog-item-link--active\";\r\n    const normalLink = \"dialog-item-link\";\r\n\r\n    return (\r\n        <li className='dialog-item'>\r\n            <NavLink to={`/dialogs/${id}`}\r\n                className={({ isActive }) => (isActive ? activeLink : normalLink)}>\r\n                <div className=\"dialog-item-img\">\r\n                    <img src={imgUrl} alt=\"dialogImage\" />\r\n                </div>\r\n                <div>\r\n                    {name}\r\n                </div>\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import './MessageItem.css'\r\n\r\nconst MessageItem = ({ receive, message, imgUrl }) => {\r\n\r\n    const sendClass = \"dialog-message\";\r\n    const receiveClass = \"dialog-message dialog-message-receive\";\r\n\r\n    const isReceiveMessage = receive;\r\n\r\n    return (\r\n        <li className={isReceiveMessage ? receiveClass : sendClass}>\r\n            <div className=\"dialog-message-item_img\">\r\n                <img src={imgUrl} alt=\"dialogImage\" />\r\n            </div>\r\n            <div className=\"dialog-message-text\">\r\n                {message}\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","import { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport textFormSchema from \"../../FormValidation/TextFormSchema\";\r\nimport './../Dialogs.css';\r\n\r\nconst AddMessageForm = ({ sendMessage }) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset } = useForm({\r\n            resolver: yupResolver(textFormSchema)\r\n        });\r\n\r\n    const onSubmit = (data) => {\r\n        onSendMessage(data);\r\n        reset();\r\n    }\r\n\r\n    const onSendMessage = (data) => {\r\n        sendMessage(data.newText);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"dialogs-send-area\">\r\n            <textarea\r\n                className=\"dialogs-send-text\"\r\n                placeholder=\"Write something\"\r\n                {...register(\"newText\", { required: true })} />\r\n            <span className=\"error-message\">{errors.newText?.message}</span>\r\n            <input\r\n                type=\"submit\"\r\n                className=\"btn dialogs-send-btn\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddMessageForm;","import DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport './Dialogs.css'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = ({ friendsData, dialogsPage, sendMessage }) => {\r\n    const { messagesData } = dialogsPage;\r\n\r\n    return (\r\n        <div className='dialogs'>\r\n            <ul className='dialogs-items'>\r\n                {\r\n                    friendsData\r\n                        .map((dialog, i) => <DialogItem\r\n                            key={i}\r\n                            name={dialog.name}\r\n                            id={dialog.id}\r\n                            imgUrl={dialog.imgUrl} />)\r\n                }\r\n            </ul>\r\n            <ul className='dialogs-messages'>\r\n                {\r\n                    messagesData\r\n                        .map((message, i) => <MessageItem\r\n                            key={i}\r\n                            message={message.message}\r\n                            id={message.id}\r\n                            imgUrl={message.imgUrl}\r\n                            receive={message.receive} />)\r\n                }\r\n                <AddMessageForm\r\n                    sendMessage={sendMessage} />\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from '@reduxjs/toolkit';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageActionCreator } from '../../redux/reducers/dialogsReducer';\r\nimport { getDialogsPageState, getFriendsData } from '../../redux/selectors/dialogsSelectors';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: getFriendsData(state),\r\n        dialogsPage: getDialogsPageState(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import * as Yup from \"yup\";\r\n\r\nconst textFormSchema = Yup.object().shape({\r\n    newText: Yup.string()\r\n        //минимальная длина - 2 символа\r\n        .min(1, \"Must be longer than 1 character\")\r\n        //максимальная длина - 20 символов\r\n        .max(400, \"Too long message\")\r\n        .required(\"Required\"),\r\n});\r\nexport default textFormSchema;","import { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"@reduxjs/toolkit\";\r\nimport { getAuthId, getIsAuth } from \"../redux/selectors/authSelectors\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    id: getAuthId(state)\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const AuthRedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to='/login' />;\r\n        return <Component {...props} />\r\n    }\r\n    return compose(connect(mapStateToPropsForRedirect))(AuthRedirectComponent);\r\n}"],"names":["getFriendsData","state","friendsData","getDialogsPageState","dialogsPage","_ref","id","imgUrl","name","_jsx","className","children","_jsxs","NavLink","to","concat","_ref2","isActive","src","alt","receive","message","isReceiveMessage","_errors$newText","sendMessage","_useForm","useForm","resolver","yupResolver","textFormSchema","register","handleSubmit","errors","formState","reset","onSendMessage","data","newText","onSubmit","_objectSpread","placeholder","required","type","messagesData","map","dialog","i","DialogItem","MessageItem","AddMessageForm","compose","connect","dispatch","newMessageText","sendMessageActionCreator","withAuthRedirect","Dialogs","Yup","shape","min","max","mapStateToPropsForRedirect","isAuth","getIsAuth","getAuthId","Component","props","Navigate"],"sourceRoot":""}